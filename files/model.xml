<engine port='5555'>
<description>
 <![CDATA[This is an  example that has one source window, one compute window, 
     three copy windows  and three aggregate windows. The compute window 
     will compute throughput rate to each trade. The three copy windows 
     will have different time retention as 5 minutes, 1 hour and 24 hours. 
     The three aggregate windows will source from three corresponding copy
     windows and  have four registered expressions to calculate 
     the non-key fields from three copy windows. The key field is what 
     is aggregated on.

     To test this model one can:
	      1. execute the ESP XML factory server with the trades xml model: 
       	  $DFESP_HOME/bin/dfesp_xml_server -exit -cleanup -model file://<full path to model.ml> -messages $DFESP_HOME/etc/xml/messages
       	2. Check the generated compute.csv
       	3. Check the generated aggregate_5m.csv / aggregate_1h.csv / aggregate_24h.csv]]>

  engine element reates the single engine top level container 
  which sets up dfESP fundamental services such as licensing, 
  logging, pub/sub, ... This single engine instance wraps one
  or more projects, that wrap one or more continuous queries 
  and different types of windows.
 </description>
 <projects>
  <project name='project' pubsub='auto' threads='8'>
   <description>
    This is to create a project. Project specifies a container
    that holds one or more continuous queries and are backed by a
    thread pool of user defined size. One can specify the pubsub
    port and type, number of threads for the project, index type
    and if using Tag Token data flow model.
   </description>
   <contqueries>
    <contquery name='contQuery' trace='aggW5minRet'>
     <description>
      This specifies the continuous query container that holds
      a collection of windows and enables one to specify the
      connectivity between windows. One can turn on tracing
      for a list of window and specifies the index type for
      windows in the query.
     </description>
     <windows>
      <window-source name='source_win' insert-only='true' index='pi_EMPTY'>
       <description>
        This defines a source window. All event streams must
        enter continuous queries by being published or
        injected into a source window.
       </description>
       <schema>
        <fields>
         <field name='ID' type='int32' key='true'/>
         <field name='symbol' type='string'/>
         <field name='currency' type='int32'/>
         <field name='udate' type='int64'/>
         <field name='msecs' type='int32'/>
         <field name='price' type='double'/>
         <field name='quantity' type='int32'/>
         <field name='venue' type='int32'/>
         <field name='broker' type='int32'/>
         <field name='buyer' type='int32'/>
         <field name='seller' type='int32'/>
         <field name='buysellflg' type='int32'/>
         <field name='time' type='stamp'/>
        </fields>
       </schema>
       <connectors>
        <connector class='fs'>
         <properties>
          <property name='type'>pub</property>
          <property name='fstype'>csv</property>
          <property name='fsname'>trades1M.csv</property>
          <property name='transactional'>true</property>
          <property name='blocksize'>1</property>
          <property name='dateformat'>%Y-%m-%d %H:%M:%S</property>
         </properties>
        </connector>
       </connectors>
      </window-source>
      <window-compute name='comp_win' index='pi_EMPTY'>
       <description>
        This defines a compute window which will compute the
        throughput rate from start time until current time.
       </description>
       <expr-initialize>
        <initializer type='int32'>integer tradeCnt; tradeCnt=0; date starttime; integer def; starttime=Today()</initializer>
       </expr-initialize>
       <schema>
        <fields>
         <field name='ID' type='int32' key='true'/>
         <field name='throughputRate' type='double'/>
        </fields>
       </schema>
       <output>
        <field-expr>tradeCnt=tradeCnt+1; def=Today()-starttime; if (def != 0) return tradeCnt/def;</field-expr>
       </output>
       <connectors>
        <connector class='fs'>
         <properties>
          <property name='type'>sub</property>
          <property name='fstype'>csv</property>
          <property name='fsname'>compute.csv</property>
          <property name='snapshot'>true</property>
          <property name='dateformat'>%Y-%m-%d %H:%M:%S</property>
         </properties>
        </connector>
       </connectors>
      </window-compute>
      <window-copy name='copyW5minRet' index='pi_HASH'>
       <description>
        This defines a copy window which copies from source window
        by retention as 5 minutes.
       </description>
       <retention type='bytime_sliding' field='time'>300 seconds</retention>
      </window-copy>
      <window-copy name='copyW1hourRet' index='pi_HASH'>
       <description>
        This defines a copy window which copies from source window
        by retention as 1 hour.
       </description>
       <retention type='bytime_sliding' field='time'>3600 seconds</retention>
      </window-copy>
      <window-copy name='copyW24hourRet' index='pi_HASH'>
       <description>
        This defines a copy window which copies from source window
        by retention as 24 hour.
       </description>
       <retention type='bytime_sliding' field='time'>86400 seconds</retention>
      </window-copy>
      <window-aggregate name='aggW5minRet'>
       <description>
        This is an aggregate window with aggregation expression
        in 5 minutes.  One expression is calculating the VWAP. The second
        expression is calculating minimum price. The third expression is calculating the
        maximum of price. The fourth is calculating the standard deviation.
       </description>
       <schema>
        <fields>
         <field name='symbol' type='string' key='true'/>
         <field name='awap' type='double'/>
         <field name='minPrice' type='double'/>
         <field name='maxPrice' type='double'/>
         <field name='std' type='double'/>
        </fields>
       </schema>
       <output>
        <field-expr>ESP_aWAve(quantity,price)</field-expr>
        <field-expr>ESP_aMin(price)</field-expr>
        <field-expr>ESP_aMax(price)</field-expr>
        <field-expr>ESP_aStd(price)</field-expr>
       </output>
       <connectors>
        <connector class='fs'>
         <properties>
          <property name='type'>sub</property>
          <property name='fstype'>csv</property>
          <property name='fsname'>aggregate_5m.csv</property>
          <property name='snapshot'>true</property>
         </properties>
        </connector>
       </connectors>
      </window-aggregate>
      <window-aggregate name='aggW1hourRet'>
       <description>
        This is an aggregate window with aggregation expression
        in 1 hour.  One expression is to calculate the VWAP. The second
        expression is to calculate the minimum price. The third expression is to ccalculate the
        maximum price. The fourth is to calculate the standard deviation.
       </description>
       <schema>
        <fields>
         <field name='symbol' type='string' key='true'/>
         <field name='awap' type='double'/>
         <field name='minPrice' type='double'/>
         <field name='maxPrice' type='double'/>
         <field name='std' type='double'/>
        </fields>
       </schema>
       <output>
        <field-expr>ESP_aWAve(quantity,price)</field-expr>
        <field-expr>ESP_aMin(price)</field-expr>
        <field-expr>ESP_aMax(price)</field-expr>
        <field-expr>ESP_aStd(price)</field-expr>
       </output>
       <connectors>
        <connector class='fs'>
         <properties>
          <property name='type'>sub</property>
          <property name='fstype'>csv</property>
          <property name='fsname'>aggregate_1h.csv</property>
          <property name='snapshot'>true</property>
         </properties>
        </connector>
       </connectors>
      </window-aggregate>
      <window-aggregate name='aggW24hourRet'>
       <description>
        This is an aggregate window with aggregation expressions
        in 24 hour.  One expression is to calculate the VWAP. The second
        expression is to calculate the minimum price. The third expression is to calculate the
        maximum price. The fourth is to calculate the standard deviation.
       </description>
       <schema>
        <fields>
         <field name='symbol' type='string' key='true'/>
         <field name='awap' type='double'/>
         <field name='minPrice' type='double'/>
         <field name='maxPrice' type='double'/>
         <field name='std' type='double'/>
        </fields>
       </schema>
       <output>
        <field-expr>ESP_aWAve(quantity,price)</field-expr>
        <field-expr>ESP_aMin(price)</field-expr>
        <field-expr>ESP_aMax(price)</field-expr>
        <field-expr>ESP_aStd(price)</field-expr>
       </output>
       <connectors>
        <connector class='fs'>
         <properties>
          <property name='type'>sub</property>
          <property name='fstype'>csv</property>
          <property name='fsname'>aggregate_24h.csv</property>
          <property name='snapshot'>true</property>
         </properties>
        </connector>
       </connectors>
      </window-aggregate>
     </windows>
     <edges>
      <description>
       This fully specifies the continuous query with window
       connectivity, which is a directed graph.
      </description>
      <edge source='source_win' target='comp_win'/>
      <edge source='source_win' target='copyW5minRet'/>
      <edge source='source_win' target='copyW1hourRet'/>
      <edge source='source_win' target='copyW24hourRet'/>
      <edge source='copyW5minRet' target='aggW5minRet'/>
      <edge source='copyW1hourRet' target='aggW1hourRet'/>
      <edge source='copyW24hourRet' target='aggW24hourRet'/>
     </edges>
    </contquery>
   </contqueries>
  </project>
 </projects>
</engine>

